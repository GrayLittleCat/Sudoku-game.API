// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231201171610_OracleInit")]
    partial class OracleInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Levels.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK_LEVEL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_LEVEL_NAME");

                    b.ToTable("LEVEL", (string)null);
                });

            modelBuilder.Entity("Domain.PlayerScores.PlayerScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LevelId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LEVEL_ID");

                    b.Property<int>("PlayerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PLAYER_ID");

                    b.Property<decimal>("Score")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCORE");

                    b.HasKey("Id")
                        .HasName("PK_PLAYER_SCORES");

                    b.HasIndex("LevelId")
                        .HasDatabaseName("IX_PLAYER_SCORES_LEVEL_ID");

                    b.HasIndex("PlayerId", "LevelId")
                        .HasDatabaseName("IX_PLAYER_SCORES_PLAYER_ID_LEVEL_ID");

                    b.ToTable("PLAYER_SCORES", (string)null);
                });

            modelBuilder.Entity("Domain.Players.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("IDENTITY_ID");

                    b.HasKey("Id")
                        .HasName("PK_PLAYERS");

                    b.HasIndex("IdentityId")
                        .IsUnique()
                        .HasDatabaseName("IX_PLAYERS_IDENTITY_ID");

                    b.ToTable("PLAYERS", (string)null);
                });

            modelBuilder.Entity("Domain.PlayerScores.PlayerScore", b =>
                {
                    b.HasOne("Domain.Levels.Level", null)
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PLAYER_SCORES_LEVEL_LEVEL_ID");

                    b.HasOne("Domain.Players.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PLAYER_SCORES_PLAYERS_PLAYER_ID");
                });

            modelBuilder.Entity("Domain.Players.Player", b =>
                {
                    b.OwnsOne("Domain.Players.Email", "Email", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("ID");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("VARCHAR2")
                                .HasColumnName("EMAIL");

                            b1.HasKey("PlayerId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasDatabaseName("IX_PLAYERS_EMAIL");

                            b1.ToTable("PLAYERS");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId")
                                .HasConstraintName("FK_PLAYERS_PLAYERS_ID");
                        });

                    b.OwnsOne("Domain.Players.Name", "Nickname", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("ID");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR2")
                                .HasColumnName("NICKNAME");

                            b1.HasKey("PlayerId");

                            b1.ToTable("PLAYERS");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId")
                                .HasConstraintName("FK_PLAYERS_PLAYERS_ID");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Nickname")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
